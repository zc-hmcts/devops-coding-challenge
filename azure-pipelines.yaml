name: DevOps Coding Challenge

trigger:
- main

pool:
  name: Default
  vmImage: 'ubuntu-latest'

parameters:
  # - name: tfversion
  #   default: 1.3.3
  #   type: string
  - name: Action
    type: string
    default: plan
    values:
      - plan
      - apply


variables:
- name: tfversion
  value: 1.3.3

steps:

- task: TerraformInstaller@0
  displayName: 'install terraform ${{ variables.tfversion }}'
  inputs:
    terraformVersion: ${{ variables.tfversion }}

- task: TerraformCLI@0
  displayName: 'check terraform version'
  inputs:
    command: version

- task: TerraformCLI@0
  displayName: Terraform init
  inputs:
    command: init
    terraformVersion: ${{ variables.tfversion }}
    backendType: 'azurerm'
    workingDirectory: $(System.DefaultWorkingDirectory)
    backendServiceArm: 'devops-test-service-connection'
    backendAzureRmResourceGroupName: 'devops-test-rg'
    backendAzureRmStorageAccountName: 'devops-test-sa'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'

- task: TerraformCLI@0
  displayName: Terraform plan
  inputs:
    command: plan
    terraformVersion: ${{ variables.tfversion }}
    commandOptions: '-out=tfplan'
    workingDirectory: $(System.DefaultWorkingDirectory)
    environmentServiceNameAzureRM: 'devops-test-service-connection'

- task: TerraformCLI@0
  displayName: Terraform apply
  inputs:
    command: apply
    conditions: and(succeeded(), eq(variables['isMain'], true), eq('${{ parameters.Action }}', 'apply'))
    terraformVersion: ${{ variables.tfversion }}
    commandOptions: '--auto-approve tfplan'
    workingDirectory: $(System.DefaultWorkingDirectory)
    environmentServiceNameAzureRM: 'devops-test-service-connection'